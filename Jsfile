eefunction changeFieldClass(field, value) {
    if (value === '1') {
        SYT_ChangeFldClass(field, "P");
    } else if (value === '2') {
        SYT_ChangeFldClass(field, "M");
    }
}

const form = document.MAINFORM;
const fields = [
    { field: form.KYC_AN_CAA, value: form.KYC_CAA.value },
    { field: form.USA_PER_AN_CAA, value: form.USA_PER_CAA.value },
    { field: form.LC_BEG_AN_CAA, value: form.LC_BEG_CAA.value },
    // Add other fields here
];

fields.forEach(item => {
    changeFieldClass(item.field, item.value);
});


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form Example</title>
    <style>
        .P {
            background-color: lightgreen;
        }
        .M {
            background-color: lightcoral;
        }
    </style>
    <script>
        function SYT_ChangeFldClass(field, className) {
            field.className = className;
        }

        function changeFieldClass(field, value) {
            if (value === '1') {
                SYT_ChangeFldClass(field, "P");
            } else if (value === '2') {
                SYT_ChangeFldClass(field, "M");
            }
        }

        document.addEventListener('DOMContentLoaded', (event) => {
            const form = document.forms['MAINFORM'];
            if (form) {
                const fields = [
                    { field: form.KYC_AN_CAA, value: form.KYC_CAA.value },
                    { field: form.USA_PER_AN_CAA, value: form.USA_PER_CAA.value },
                    { field: form.LC_BEG_AN_CAA, value: form.LC_BEG_CAA.value },
                    // Add other fields here
                ];

                fields.forEach(item => {
                    if (item.field && item.value) {
                        changeFieldClass(item.field, item.value);
                    }
                });
            } else {
                console.error("Form 'MAINFORM' not found");





const fieldMappings = [
    {field: document.MAINFORM.KYC_CAA, target: document.MAINFORM.KYC_AN_CAA},
    {field: document.MAINFORM.USA_PER_CAA, target: document.MAINFORM.USA_PER_AN_CAA},
    {field: document.MAINFORM.LC_BEG_CAA, target: document.MAINFORM.LC_BEG_AN_CAA},
    {field: document.MAINFORM.APPL_BENE_CAA, target: document.MAINFORM.APPL_BENE_AP_CAA},
    {field: document.MAINFORM.LC_ISSUE_CAA, target: document.MAINFORM.LC_ISSUE_AN_CAA},
    {field: document.MAINFORM.LC_PER_CAA, target: document.MAINFORM.LC_PER_AN_CAA},
    {field: document.MAINFORM.DED_STO_CAA, target: document.MAINFORM.DED_STO_AN_CAA},
    {field: document.MAINFORM.PUR_CAP_CAA, target: document.MAINFORM.PUR_CAP_AN_CAA}
];

fieldMappings.forEach(mapping => {
    const value = mapping.field.value;
    if (value === '1') {
        SYT_ChangeFldClass(mapping.target, "P");
    } else if (value === '2') {
        SYT_ChangeFldClass(mapping.target, "M");
    }
});
            }
        });
    </script>
</head>
<body>
    <form name="MAINFORM">
        <input type="hidden" name="KYC_CAA" value="1">
        <input type="text" name="KYC_AN_CAA" placeholder="KYC_AN_CAA">
        <input type="hidden" name="USA_PER_CAA" value="2">
        <input type="text" name="USA_PER_AN_CAA" placeholder="USA_PER_AN_CAA">
        <input type="hidden" name="LC_BEG_CAA" value="1">
        <input type="text" name="LC_BEG_AN_CAA" placeholder="LC_BEG_AN_CAA">
        <!-- Add other fields here -->
    </form>
</body>
</html>



function checkDevolvementReason() {
    const form = document.MAINFORM;
    try {
        const reasons = {
            DE_VOLMENT_CAA: "Applicant has a history of devolvement of LC bills in the past 12 months.",
            CON_ALL_ACC_CAA: "It is certified by the BRC that the conduct of all the accounts are not satisfactory.",
            KYC_CAA: "KYC not updated in Cas as per extant instructions.",
            USA_PER_CAA: "Usance period of the LC is beyond the sanction terms.",
            LC_BEG_CAA: "LC issued differs from usual business operations of the Customer.",
            APPL_BENE_CAA: "Applicant and Beneficiary are associate concerns related parties.",
            LC_LOAN_CAA: "Specified Margin as per TL sanction is not ensured.",
            LC_ISSUE_CAA: "LC limit made available in Chs for the LC Liability account does not have necessary approval of the sanctioning authority / appropriate authority.",
            LC_PER_CAA: "LC period, including usance period, exceeds working capital cycle of the applicant.",
            DED_STO_CAA: "The stocks procured against the LC are not deducted while arriving at Drawing Power.",
            PUR_CAP_CAA: "The purpose of Capex LC is not in sync with the sanctioned terms of the Term Loan.",
            INV_PRO_CAA: "Inventories procured under LC are not in sync with the activity financed.",
            CASH_CAA: "Cash budgets were not being obtained and examined, wherever applicable, as per extant instructions.",
            BUY_CRE_CAA: "Buyer's Credit outstanding against the LC limits have not been reduced from the Drawing Power.",
            TDR_CAA: "Adequate margin is not available and necessary lien is not marked."
        };

        for (let key in reasons) {
            if (form[key].value === "2") {
                form[key + "_REASON_CAA"].value = reasons[key];
                break;
            }
        }
    } catch (e) {
        console.error("SYF_INIC_Issue_After_Registoric.js SYF_INLC_Advices_Calculation", e);
    }
}


var id = document.MAINFORM.C_MAIN_REF.value;
    var oaagettable= SYS_GetTableData_S("EXIMTRX.INLC_OAA_CAA", "C_MAIN_REF='" + id + "' AND C_FUNC_SHORT_NAME='CONT_OFFICER_OTH'" , "C_FUNC_SHORT_NAME", "C_FUNC_SHORT_NAME_OAA_TEMP", true);
   var oaagettable1= SYS_GetTableData_S("EXIMTRX.INLC_OAA_CAA", "C_MAIN_REF='" + id + "' AND C_FUNC_SHORT_NAME='BCO'" , "C_FUNC_SHORT_NAME", "C_FUNC_SHORT_NAME_OAA_TEMP", true);
   if(SYS_FUNCTION_TYPE == 'IQ' || SYS_FUNCTION_TYPE == 'PM' || SYS_FUNCTION_TYPE == 'RE' && (SYS_FUNCTION_TYPE == 'RE' || (oaagettable != "CONT_OFFICER_OTH" && oaagettable != false) || (oaagettable1 !='BCO' &&  oaagettable1 != false))){
       SYT_OAA_DISPLAY();
       SYT_CAA_DISPLAY();
       }



var id = document.MAINFORM.C_MAIN_REF.value;

// Retrieve data based on id and conditions
var oaagettable = SYS_GetTableData_S(
    "EXIMTRX.INLC_OAA_CAA", 
    "C_MAIN_REF='" + id + "' AND C_FUNC_SHORT_NAME='CONT_OFFICER_OTH'", 
    "C_FUNC_SHORT_NAME", 
    "C_FUNC_SHORT_NAME_OAA_TEMP", 
    true
);

var oaagettable1 = SYS_GetTableData_S(
    "EXIMTRX.INLC_OAA_CAA", 
    "C_MAIN_REF='" + id + "' AND C_FUNC_SHORT_NAME='BCO'", 
    "C_FUNC_SHORT_NAME", 
    "C_FUNC_SHORT_NAME_OAA_TEMP", 
    true
);

// Check if SYS_FUNCTION_TYPE is 'RE' and determine if the transaction is from CONT_OFFICER_OTH or BCO
var isRE = SYS_FUNCTION_TYPE == 'RE';
var isFromCONT_OFFICER_OTH = oaagettable === "CONT_OFFICER_OTH" || oaagettable1 === false;
var isFromBCO = oaagettable1 === 'BCO' || oaagettable === false;

// Define the condition for DSO processing
var shouldProcessDSO = isRE && !(isFromCONT_OFFICER_OTH || isFromBCO);

// Main condition check
if (SYS_FUNCTION_TYPE == 'IQ' || SYS_FUNCTION_TYPE == 'PM' || shouldProcessDSO) {
    SYT_OAA_DISPLAY();
    SYT_CAA_DISPLAY();
}

SELECT 
    COUNT(*) AS Total_LCs,
    SUM(LC_BAL) AS Total_LC_BAL_Amount
FROM 
    INLC_MASTER
WHERE 
    CEF_NUMBER = 'your_CEF_number' 
    AND LC_DATE >= ADD_MONTHS(SYSDATE, -12)
    AND LC_DATE <= SYSDATE;

var id = document.MAINFORM.C_MAIN_REF.value;

// Retrieve data based on id and conditions
var oaagettable = SYS_GetTableData_S(
    "EXIMTRX.INLC_OAA_CAA", 
    "C_MAIN_REF='" + id + "' AND C_FUNC_SHORT_NAME='CONT_OFFICER_OTH'", 
    "C_FUNC_SHORT_NAME", 
    "C_FUNC_SHORT_NAME_OAA_TEMP", 
    true
);

var oaagettable1 = SYS_GetTableData_S(
    "EXIMTRX.INLC_OAA_CAA", 
    "C_MAIN_REF='" + id + "' AND C_FUNC_SHORT_NAME='BCO'", 
    "C_FUNC_SHORT_NAME", 
    "C_FUNC_SHORT_NAME_OAA_TEMP", 
    true
);

// Check if SYS_FUNCTION_TYPE is 'RE' and determine source function names
var isRE = SYS_FUNCTION_TYPE == 'RE';
var isFromCONT_OFFICER_OTH = oaagettable === "CONT_OFFICER_OTH" || oaagettable1 === false;
var isFromBCO = oaagettable1 === 'BCO' || oaagettable === false;
var bothFalse = oaagettable === false && oaagettable1 === false;

// Define the condition for DSO processing
var shouldProcessDSO = isRE && !(isFromCONT_OFFICER_OTH || isFromBCO);

// Main condition check
if (SYS_FUNCTION_TYPE == 'IQ' || SYS_FUNCTION_TYPE == 'PM' || shouldProcessDSO || (isRE && bothFalse)) {
    SYT_OAA_DISPLAY();
    SYT_CAA_DISPLAY();
}







csFuncLevelProto.SYF_OAA_DOC_VIEW = function(event){
	try{
	document.MAINFORM.APPL_NM_CAA.value=document.MAINFORM.APPL_NM.value;
	document.MAINFORM.APPL_ID_CAA.value=document.MAINFORM.APPL_ID.value;
	document.MAINFORM.BUSINESS_TYPE_CAA.value=document.MAINFORM.BUSINESS_TYPE.value;
	document.MAINFORM.APPL_ADD1_CAA.value=document.MAINFORM.APPL_ADD1.value;
	document.MAINFORM.APPL_ADD2_CAA.value=document.MAINFORM.APPL_ADD2.value;
	document.MAINFORM.CITY_CAA.value=document.MAINFORM.CITY.value;
	document.MAINFORM.POST_CODE_CAA.value=document.MAINFORM.POST_CODE.value;
	document.MAINFORM.STATE2_TEMP_CAA.value=document.MAINFORM.STATE2_TEMP.value;
	document.MAINFORM.CUST_SEGMENT_TEMP_CAA.value=document.MAINFORM.CUST_SEGMENT_TEMP.value;
	document.MAINFORM.LC_AMT_CAA.value=document.MAINFORM.LC_AMT.value;
	document.MAINFORM.TT_TEMP_CAA.value=document.MAINFORM.TT_TEMP.value;
	document.MAINFORM.TENOR_MON_CAA.value=document.MAINFORM.TENOR_MON.value;
	document.MAINFORM.F_BASE_PERCENTAGE_CAA.value=document.MAINFORM.F_BASE_PERCENTAGE.value;
	document.MAINFORM.AR_TEM_CAA.value=document.MAINFORM.AR_TEM.value;
	document.MAINFORM.CHG_COLL_AMT_CAA.value=document.MAINFORM.CHG_COLL_AMT.value;
	document.MAINFORM.TOLERANCE_PLUS_CAA.value=document.MAINFORM.TEMP_TOLERANCE_PLUS.value;
	document.MAINFORM.LC_BAL_CAA.value=document.MAINFORM.LC_BAL.value;
	document.MAINFORM.REV_TYPE_TEMP_CAA.value=document.MAINFORM.REV_TYPE_TEMP.value;
	document.MAINFORM.OPERA_ACC_NO_CAA.value=document.MAINFORM.OPERA_ACC_NO.value;
	document.MAINFORM.LC_LIMIT_CBS_TEMP_CAA.value=document.MAINFORM.LC_LIMIT_CBS_TEMP.value;
	document.MAINFORM.LC_LIMIT_CBS_TEMP2_CAA.value=document.MAINFORM.LC_LIMIT_CBS_TEMP2.value;
	document.MAINFORM.TOTAL_OS_TEMP_CAA.value=document.MAINFORM.TOTAL_OS_TEMP.value;
	document.MAINFORM.BENE_NM_CAA.value=document.MAINFORM.BENE_NM.value;
	document.MAINFORM.TMP_ADV_BK_ID_CAA.value=document.MAINFORM.TMP_ADV_BK_ID.value;
	document.MAINFORM.BENE_ADD1_CAA.value=document.MAINFORM.BENE_ADD1.value;
	document.MAINFORM.BENE_ADD2_CAA.value=document.MAINFORM.BENE_ADD2.value;
	document.MAINFORM.CITY_P1_CAA.value=document.MAINFORM.CITY_P1.value;
	document.MAINFORM.STATE_CP1_TEMP_CAA.value=document.MAINFORM.STATE_CP1_TEMP.value;
	document.MAINFORM.POST_CODE1_CAA.value=document.MAINFORM.POST_CODE1.value;
	document.MAINFORM.DATE_OF_LAST_TEMP_CAA.value=document.MAINFORM.DATE_OF_LAST_TEMP.value;
	document.MAINFORM.SBI_RATING12_TEMP_FINAL_CAA.value=document.MAINFORM.SBI_RATING12_TEMP_FINAL.value;
	document.MAINFORM.RATING1_TEMP_CAA.value=document.MAINFORM.RATING1_TEMP.value;
	document.MAINFORM.RATING_DT14_TEMP_CAA.value=document.MAINFORM.RATING_DT14_TEMP.value;
	document.MAINFORM.MRGN_PER_BG_TEMP_CAA.value=document.MAINFORM.MRGN_PER_BG_TEMP.value;
	document.MAINFORM.TOTAL_OS_AMT_TEMP_CAA.value=document.MAINFORM.TOTAL_OS_AMT_TEMP.value;
	document.MAINFORM.MARGIN_RT_CAA.value=document.MAINFORM.MARGIN_RT.value;
	document.MAINFORM.ACTUAL_MARGIN_AMT_CAA.value=document.MAINFORM.ACTUAL_MARGIN_AMT.value;
	document.MAINFORM.DEPOSIT_ACC_NO_CAA.value=document.MAINFORM.DEPOSIT_ACC_NO.value;
	document.MAINFORM.DEPOSIT_ACC_NO1_CAA.value=document.MAINFORM.DEPOSIT_ACC_NO1.value;
	document.MAINFORM.DEPOSIT_ACC_NO2_CAA.value=document.MAINFORM.DEPOSIT_ACC_NO2.value;
	document.MAINFORM.DEPOSIT_ACC_NO3_CAA.value=document.MAINFORM.DEPOSIT_ACC_NO3.value;
	document.MAINFORM.AVAL_LIEN_BAL_CAA.value=document.MAINFORM.AVAL_LIEN_BAL.value;
	document.MAINFORM.AVAL_LIEN_BAL1_CAA.value=document.MAINFORM.AVAL_LIEN_BAL1.value;
	document.MAINFORM.AVAL_LIEN_BAL2_CAA.value=document.MAINFORM.AVAL_LIEN_BAL2.value;
	document.MAINFORM.AVAL_LIEN_BAL3_CAA.value=document.MAINFORM.AVAL_LIEN_BAL3.value;
    document.MAINFORM.TAG_20_TEMP_CAA.value=document.MAINFORM.TAG_20_TEMP.value;
	document.MAINFORM.UN_PERD_DOST_TEMP1_CAA.value=document.MAINFORM.UN_PERD_DOST_TEMP1.value;
	document.MAINFORM.TENOR_DAYS_CAA.value=document.MAINFORM.TENOR_DAYS.value;
	document.MAINFORM.ISSUE_DT_CAA.value=document.MAINFORM.ISSUE_DT.value;
	document.MAINFORM.EXPIRY_DT_CAA.value=document.MAINFORM.EXPIRY_DT.value;
	document.MAINFORM.EXPIRY_PLC_CAA.value=document.MAINFORM.EXPIRY_PLC.value;

	}
	catch (e) {
		DisExcpt("SYF_INLC_Issue_After_RegisterLC.js*OAA DOC", e);
	}
}


csFuncLevelProto.SYF_OAA_DOC_VIEW = function(event) {
    try {
        const fields = [
            'APPL_NM', 'APPL_ID', 'BUSINESS_TYPE', 'APPL_ADD1', 'APPL_ADD2', 
            'CITY', 'POST_CODE', 'STATE2_TEMP', 'CUST_SEGMENT_TEMP', 'LC_AMT', 
            'TT_TEMP', 'TENOR_MON', 'F_BASE_PERCENTAGE', 'AR_TEM', 'CHG_COLL_AMT', 
            'TOLERANCE_PLUS', 'LC_BAL', 'REV_TYPE_TEMP', 'OPERA_ACC_NO', 
            'LC_LIMIT_CBS_TEMP', 'LC_LIMIT_CBS_TEMP2', 'TOTAL_OS_TEMP', 'BENE_NM', 
            'TMP_ADV_BK_ID', 'BENE_ADD1', 'BENE_ADD2', 'CITY_P1', 'STATE_CP1_TEMP', 
            'POST_CODE1', 'DATE_OF_LAST_TEMP', 'SBI_RATING12_TEMP_FINAL', 
            'RATING1_TEMP', 'RATING_DT14_TEMP', 'MRGN_PER_BG_TEMP', 'TOTAL_OS_AMT_TEMP', 
            'MARGIN_RT', 'ACTUAL_MARGIN_AMT', 'DEPOSIT_ACC_NO', 'DEPOSIT_ACC_NO1', 
            'DEPOSIT_ACC_NO2', 'DEPOSIT_ACC_NO3', 'AVAL_LIEN_BAL', 'AVAL_LIEN_BAL1', 
            'AVAL_LIEN_BAL2', 'AVAL_LIEN_BAL3', 'TAG_20_TEMP', 'UN_PERD_DOST_TEMP1', 
            'TENOR_DAYS', 'ISSUE_DT', 'EXPIRY_DT', 'EXPIRY_PLC'
        ];

        fields.forEach(field => {
            document.MAINFORM[`${field}_CAA`].value = document.MAINFORM[field].value;
        });
    } catch (e) {
        DisExcpt("SYF_INLC_Issue_After_RegisterLC.js*OAA DOC", e);
    }
}


csFuncLevelProto.SYF_OAA_DOC_VIEW = function(event) {
    try {
        var fields = [
            'APPL_NM', 'APPL_ID', 'BUSINESS_TYPE', 'APPL_ADD1', 'APPL_ADD2', 
            'CITY', 'POST_CODE', 'STATE2_TEMP', 'CUST_SEGMENT_TEMP', 'LC_AMT', 
            'TT_TEMP', 'TENOR_MON', 'F_BASE_PERCENTAGE', 'AR_TEM', 'CHG_COLL_AMT', 
            'TOLERANCE_PLUS', 'LC_BAL', 'REV_TYPE_TEMP', 'OPERA_ACC_NO', 
            'LC_LIMIT_CBS_TEMP', 'LC_LIMIT_CBS_TEMP2', 'TOTAL_OS_TEMP', 'BENE_NM', 
            'TMP_ADV_BK_ID', 'BENE_ADD1', 'BENE_ADD2', 'CITY_P1', 'STATE_CP1_TEMP', 
            'POST_CODE1', 'DATE_OF_LAST_TEMP', 'SBI_RATING12_TEMP_FINAL', 
            'RATING1_TEMP', 'RATING_DT14_TEMP', 'MRGN_PER_BG_TEMP', 'TOTAL_OS_AMT_TEMP', 
            'MARGIN_RT', 'ACTUAL_MARGIN_AMT', 'DEPOSIT_ACC_NO', 'DEPOSIT_ACC_NO1', 
            'DEPOSIT_ACC_NO2', 'DEPOSIT_ACC_NO3', 'AVAL_LIEN_BAL', 'AVAL_LIEN_BAL1', 
            'AVAL_LIEN_BAL2', 'AVAL_LIEN_BAL3', 'TAG_20_TEMP', 'UN_PERD_DOST_TEMP1', 
            'TENOR_DAYS', 'ISSUE_DT', 'EXPIRY_DT', 'EXPIRY_PLC'
        ];

        var fields_CAA = fields.map(function(field) {
            return field + '_CAA';
        });

        fields.forEach(function(field, index) {
            var sourceValue = document.MAINFORM[field] ? document.MAINFORM[field].value : null;
            document.MAINFORM[fields_CAA[index]].value = sourceValue ? sourceValue : null;
        });
    } catch (e) {
        DisExcpt("SYF_INLC_Issue_After_RegisterLC.js*OAA DOC", e);
    }
}



csFuncLevelProto.SYF_CompileNonCompile_check_OAA = function() {
    try {
     var form = document.MAINFORM;
	var oaafileds = ['INSU_OAA','REV_TYPE_OAA','MEANS_GOODS_OAA','MEANS_GOODS_OAA1','LC_CLAUSE_OAA','REPORT_OAA','LC_STAMP_OAA','DOC_SIGN_OAA','LC_APP1_OAA','LC_REQ_OAA','CUST_CIF_OAA'];
       for (var key in oaafileds) {
                    if (form[key].value == "2") {
                        return false
                    }else{
                        return true
                    }
                }
		

} catch (e) {
    DisExcpt("SYF_INLC_Issue_After_RegisterLC.js*SYF_Getdata_CAA", e);
}
}

 if (!SYF_CompileNonCompile_check_OAA()) {
			  return false;
        }

csFuncLevelProto.SYF_CompileNonCompile_check_OAA = function() {
    try {
        var form = document.MAINFORM;
        var oaafileds = ['INSU_OAA','REV_TYPE_OAA','MEANS_GOODS_OAA','MEANS_GOODS_OAA1','LC_CLAUSE_OAA','REPORT_OAA','LC_STAMP_OAA','DOC_SIGN_OAA','LC_APP1_OAA','LC_REQ_OAA','CUST_CIF_OAA'];
        
        for (var i = 0; i < oaafileds.length; i++) {
            var key = oaafileds[i];
            if (form[key].value == "2") {
                return false;
            }
        }
        
        return true;
    } catch (e) {
        DisExcpt("SYF_INLC_Issue_After_RegisterLC.js*SYF_Getdata_CAA", e);
    }
};

if (!SYF_CompileNonCompile_check_OAA()) {
    return false;
}




csFuncLevelProto.SYF_CompileNonCompile_check_CAA = function() {
    try {
        var form = document.MAINFORM;
        var caafileds = ['CON_ALL_ACC_CAA','KYC_CAA','USA_PER_CAA','LC_BEG_CAA','LC_BEG_AN_CAA','APPL_BENE_CAA','LC_LOAN_CAA','LC_LOAN_CAA','LC_ISSUE_CAA','LC_PER_CAA','DED_STO_CAA','PUR_CAP_CAA','INV_PRO_CAA','CASH_CAA','BUY_CRE_CAA','TDR_CAA'];
        var ApproveFileds = ['CON_ALL_ACC_AN_CAA','KYC_AN_CAA','USA_PER_AN_CAA','LC_BEG_AN_CAA','APPL_BENE_AP_CAA','LC_LOAN_AN_CAA','LC_ISSUE_AN_CAA','LC_PER_AN_CAA','DED_STO_AN_CAA','PUR_CAP_AN_CAA','INV_PRO_AN_CAA','CASH_AN_CAA','BUY_CRE_AN_CAA','TDR_AN_CAA']
        for (var i = 0; i < caafileds.length; i++) {
            var key = caafileds[i];
            if (form[key].value == "2") {
				alert('OAA AND CAA Certificates is are non-compilend refer to BRC && Control Officer')
                return false;
            }
        }
        
        return true;
    } catch (e) {
        DisExcpt("SYF_INLC_Issue_After_RegisterLC.js*SYF_CompileNonCompile_check_CAA", e);
    }
};

if (!SYF_CompileNonCompile_check_OAA()) {
    return false;
}


csFuncLevelProto.SYF_CompileNonCompile_check_CAA = function() {
    try {
        var form = document.MAINFORM;
        var caafileds = ['CON_ALL_ACC_CAA','KYC_CAA','USA_PER_CAA','LC_BEG_CAA','LC_BEG_AN_CAA','APPL_BENE_CAA','LC_LOAN_CAA','LC_LOAN_CAA','LC_ISSUE_CAA','LC_PER_CAA','DED_STO_CAA','PUR_CAP_CAA','INV_PRO_CAA','CASH_CAA','BUY_CRE_CAA','TDR_CAA'];
        var ApproveFileds = ['CON_ALL_ACC_AN_CAA','KYC_AN_CAA','USA_PER_AN_CAA','LC_BEG_AN_CAA','APPL_BENE_AP_CAA','LC_LOAN_AN_CAA','LC_ISSUE_AN_CAA','LC_PER_AN_CAA','DED_STO_AN_CAA','PUR_CAP_AN_CAA','INV_PRO_AN_CAA','CASH_AN_CAA','BUY_CRE_AN_CAA','TDR_AN_CAA'];

        for (var i = 0; i < caafileds.length; i++) {
            var caaKey = caafileds[i];
            var approveKey = ApproveFileds[i];

            if (form[caaKey].value == "2") {
                if (form[approveKey].value == "1" || form[approveKey].value == "2") {
                    return true;
                } else {
                    alert('OAA AND CAA Certificates are non-compliant; refer to BRC & Control Officer');
                    return false;
                }
            }
        }
        
        return true;
    } catch (e) {
        DisExcpt("SYF_INLC_Issue_After_RegisterLC.js*SYF_CompileNonCompile_check_CAA", e);
    }
};

if (!SYF_CompileNonCompile_check_OAA()) {
    return false;
}


csFuncLevelProto.SYF_CompileNonCompile_check_OAA = function() {
    try {
        var form = document.MAINFORM;
        var oaafileds = ['INSU_OAA','REV_TYPE_OAA','MEANS_GOODS_OAA','MEANS_GOODS_OAA1','LC_CLAUSE_OAA','REPORT_OAA','LC_STAMP_OAA','DOC_SIGN_OAA','LC_APP1_OAA','LC_REQ_OAA','CUST_CIF_OAA'];
        var ApproveFiledsOAA = ['INSU_OAA','REV_TYPE_OAA','MEANS_GOODS_OAA','MEANS_GOODS_OAA1','LC_CLAUSE_OAA','REPORT_OAA','LC_STAMP_OAA','DOC_SIGN_OAA','LC_APP1_OAA','LC_REQ_OAA','CUST_CIF_OAA'];
        var flag = false;
        for (var i = 0; i < oaafileds.length; i++) {
            var key = oaafileds[i];
            var approveKey = ApproveFiledsOAA[i];
            if (form[key].value == "2") {
                if (form[approveKey].value == "1" || form[approveKey].value == "2") {
                    flag = true;
                    break;
                } 
            }
        }

        if(flag){   
            alert('OAA AND CAA Certificates are non-compliant; refer to BRC & Control Officer');
            return false;
        } else{
        return false;
}

       
    } catch (e) {
        DisExcpt("SYF_INLC_Issue_After_RegisterLC.js*SYF_CompileNonCompile_check_OAA", e);
    }
};
