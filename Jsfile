function changeFieldClass(field, value) {
    if (value === '1') {
        SYT_ChangeFldClass(field, "P");
    } else if (value === '2') {
        SYT_ChangeFldClass(field, "M");
    }
}

const form = document.MAINFORM;
const fields = [
    { field: form.KYC_AN_CAA, value: form.KYC_CAA.value },
    { field: form.USA_PER_AN_CAA, value: form.USA_PER_CAA.value },
    { field: form.LC_BEG_AN_CAA, value: form.LC_BEG_CAA.value },
    // Add other fields here
];

fields.forEach(item => {
    changeFieldClass(item.field, item.value);
});


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form Example</title>
    <style>
        .P {
            background-color: lightgreen;
        }
        .M {
            background-color: lightcoral;
        }
    </style>
    <script>
        function SYT_ChangeFldClass(field, className) {
            field.className = className;
        }

        function changeFieldClass(field, value) {
            if (value === '1') {
                SYT_ChangeFldClass(field, "P");
            } else if (value === '2') {
                SYT_ChangeFldClass(field, "M");
            }
        }

        document.addEventListener('DOMContentLoaded', (event) => {
            const form = document.forms['MAINFORM'];
            if (form) {
                const fields = [
                    { field: form.KYC_AN_CAA, value: form.KYC_CAA.value },
                    { field: form.USA_PER_AN_CAA, value: form.USA_PER_CAA.value },
                    { field: form.LC_BEG_AN_CAA, value: form.LC_BEG_CAA.value },
                    // Add other fields here
                ];

                fields.forEach(item => {
                    if (item.field && item.value) {
                        changeFieldClass(item.field, item.value);
                    }
                });
            } else {
                console.error("Form 'MAINFORM' not found");





const fieldMappings = [
    {field: document.MAINFORM.KYC_CAA, target: document.MAINFORM.KYC_AN_CAA},
    {field: document.MAINFORM.USA_PER_CAA, target: document.MAINFORM.USA_PER_AN_CAA},
    {field: document.MAINFORM.LC_BEG_CAA, target: document.MAINFORM.LC_BEG_AN_CAA},
    {field: document.MAINFORM.APPL_BENE_CAA, target: document.MAINFORM.APPL_BENE_AP_CAA},
    {field: document.MAINFORM.LC_ISSUE_CAA, target: document.MAINFORM.LC_ISSUE_AN_CAA},
    {field: document.MAINFORM.LC_PER_CAA, target: document.MAINFORM.LC_PER_AN_CAA},
    {field: document.MAINFORM.DED_STO_CAA, target: document.MAINFORM.DED_STO_AN_CAA},
    {field: document.MAINFORM.PUR_CAP_CAA, target: document.MAINFORM.PUR_CAP_AN_CAA}
];

fieldMappings.forEach(mapping => {
    const value = mapping.field.value;
    if (value === '1') {
        SYT_ChangeFldClass(mapping.target, "P");
    } else if (value === '2') {
        SYT_ChangeFldClass(mapping.target, "M");
    }
});
            }
        });
    </script>
</head>
<body>
    <form name="MAINFORM">
        <input type="hidden" name="KYC_CAA" value="1">
        <input type="text" name="KYC_AN_CAA" placeholder="KYC_AN_CAA">
        <input type="hidden" name="USA_PER_CAA" value="2">
        <input type="text" name="USA_PER_AN_CAA" placeholder="USA_PER_AN_CAA">
        <input type="hidden" name="LC_BEG_CAA" value="1">
        <input type="text" name="LC_BEG_AN_CAA" placeholder="LC_BEG_AN_CAA">
        <!-- Add other fields here -->
    </form>
</body>
</html>



function checkDevolvementReason() {
    const form = document.MAINFORM;
    try {
        const reasons = {
            DE_VOLMENT_CAA: "Applicant has a history of devolvement of LC bills in the past 12 months.",
            CON_ALL_ACC_CAA: "It is certified by the BRC that the conduct of all the accounts are not satisfactory.",
            KYC_CAA: "KYC not updated in Cas as per extant instructions.",
            USA_PER_CAA: "Usance period of the LC is beyond the sanction terms.",
            LC_BEG_CAA: "LC issued differs from usual business operations of the Customer.",
            APPL_BENE_CAA: "Applicant and Beneficiary are associate concerns related parties.",
            LC_LOAN_CAA: "Specified Margin as per TL sanction is not ensured.",
            LC_ISSUE_CAA: "LC limit made available in Chs for the LC Liability account does not have necessary approval of the sanctioning authority / appropriate authority.",
            LC_PER_CAA: "LC period, including usance period, exceeds working capital cycle of the applicant.",
            DED_STO_CAA: "The stocks procured against the LC are not deducted while arriving at Drawing Power.",
            PUR_CAP_CAA: "The purpose of Capex LC is not in sync with the sanctioned terms of the Term Loan.",
            INV_PRO_CAA: "Inventories procured under LC are not in sync with the activity financed.",
            CASH_CAA: "Cash budgets were not being obtained and examined, wherever applicable, as per extant instructions.",
            BUY_CRE_CAA: "Buyer's Credit outstanding against the LC limits have not been reduced from the Drawing Power.",
            TDR_CAA: "Adequate margin is not available and necessary lien is not marked."
        };

        for (let key in reasons) {
            if (form[key].value === "2") {
                form[key + "_REASON_CAA"].value = reasons[key];
                break;
            }
        }
    } catch (e) {
        console.error("SYF_INIC_Issue_After_Registoric.js SYF_INLC_Advices_Calculation", e);
    }
}


var id = document.MAINFORM.C_MAIN_REF.value;
    var oaagettable= SYS_GetTableData_S("EXIMTRX.INLC_OAA_CAA", "C_MAIN_REF='" + id + "' AND C_FUNC_SHORT_NAME='CONT_OFFICER_OTH'" , "C_FUNC_SHORT_NAME", "C_FUNC_SHORT_NAME_OAA_TEMP", true);
   var oaagettable1= SYS_GetTableData_S("EXIMTRX.INLC_OAA_CAA", "C_MAIN_REF='" + id + "' AND C_FUNC_SHORT_NAME='BCO'" , "C_FUNC_SHORT_NAME", "C_FUNC_SHORT_NAME_OAA_TEMP", true);
   if(SYS_FUNCTION_TYPE == 'IQ' || SYS_FUNCTION_TYPE == 'PM' || SYS_FUNCTION_TYPE == 'RE' && (SYS_FUNCTION_TYPE == 'RE' || (oaagettable != "CONT_OFFICER_OTH" && oaagettable != false) || (oaagettable1 !='BCO' &&  oaagettable1 != false))){
       SYT_OAA_DISPLAY();
       SYT_CAA_DISPLAY();
       }
